{"version":3,"sources":["resources/actions/actions.js","resources/components/constants.js","resources/components/table.js","resources/components/chart.js","resources/components/map.js","resources/components/main.js","App.js","serviceWorker.js","index.js"],"names":["SET_VALUE","value","type","payload","SET_CHART","SET_MAP","SET_NEWDATA","COLORS","REGIONSMAP","REGIONSTITLE","headerSortingClasses","column","sortOrder","isLastSorting","colIndex","TableBasic","props","createMapData","parameter","result","data","i","push","territory","forEach","item","search","find","s","length","sort","a","b","createChartData","operator","set_data","newState","id","index","Math","floor","random","set","set_newdata","set_map_parameter","current","set_chart_parameter","set_value_parameter","columns","dataField","text","footer","columnData","reduce","acc","Number","headerEvents","onClick","e","columnIndex","className","Button","variant","this","container-fluid","keyField","bootstrap4","pagination","paginationFactory","sizePerPage","hideSizePerPage","striped","hover","React","Component","connect","state","dispatch","bindActionCreators","LineChart","charType","labels","labelCharts","datasets","label","fill","borderColor","backgroundColor","options","title","display","scales","yAxes","ticks","suggestedMin","suggestedMax","legend","position","fontColor","fontSize","charTypeChange","bind","prevProps","mapData","update","datacopy","Object","assign","chartData","setState","chart","currentTarget","getAttribute","ButtonGroup","data-chart","redraw","Map","colorUpdater","dataUpdater","ind","max","map","cData","currentColor","ceil","viewBox","xmlns","amcharts","xlink","version","width","region","arr","OverlayTrigger","key","placement","overlay","Tooltip","style","stroke","strokeWidth","strokeLinecap","strokeLinejoin","strokeOpacity","original","d","color","round","Main","App","Boolean","window","location","hostname","match","initilaState","regionTable","operatorTable","operatorsData","store","createStore","action","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d2a64deb.chunk.js","sourcesContent":["export const SET_VALUE = (value) => ({\r\n    type: 'SET_VALUE',\r\n    payload: value,\r\n  });\r\n\r\nexport const SET_CHART = (value) => ({\r\n  type: 'SET_CHART',\r\n  payload: value,\r\n});\r\n\r\nexport const SET_MAP = (value) => ({\r\n  type: 'SET_MAP',\r\n  payload: value,\r\n});\r\n\r\nexport const SET_NEWDATA = (value) => ({\r\n  type: 'SET_NEWDATA',\r\n  payload: value,\r\n});\r\n\r\n","export const ROWS = 20;\r\nexport const OPERATORS = 6;\r\nexport const TERRITORY = 6;\r\nexport const COLORS = ['#1abb9c', '#48c9b0', '#76d6c4', '#a3e4d7', '#d1f1eb']\r\nexport const REGIONSMAP =\r\n  [\r\n    \"M174.6,142.45l3.27,0.51l6.23,3.09l3.79,0.51l0.89,-1.24l7.19,-0.29l1.15,1.08l4,-1.95l1.62,-1.95l-0.18,3.57l2.33,0.26l0.97,1.63l3.92,1.95l2.25,-1.63l5.21,0.45l2.46,-0.96l4.5,0.19l2.96,1.59l0.84,-0.48l-0.71,-0.96l0.97,-0.22l2.93,2.01l-0.18,-2.36l0.97,-0.77l0.71,-0.16l0.18,1.56l2.67,0.32l-1.2,-1.79l0.86,-0.86l3.03,1.44l0.21,1.37l4.45,0.38l1.33,-0.92l1.49,1.75l1.57,0.35l1.07,3.63l3.92,-0.7l0.86,1.31l0.63,-3.48l2.33,0.35l0.39,-2.42l1.57,1.02l0.99,-1.56l1.28,1.05l0.81,-1.15l1.99,0.51l3.56,3.22l0.81,-1.53l6.59,1.21l2.17,2.39l1.33,-1.4l10.12,-0.19l2.43,0.73l8.03,-1.18l6.54,-3.16l1.78,0.16l0.92,-2.1l-0.84,-1.98l0.39,-1.85l3.48,-3.92l8.61,0.64l3.22,-0.41l0.86,-1.31l3.82,0.89l-1.1,1.15l-2.22,0.16l1.94,0.7l5.07,-2.23l3.35,1.53l2.07,-0.86l0,0l-0.24,3.48l1.67,5.01l-0.26,2.87l2.8,1.28l1.41,3.35l-0.44,1.31l-2.64,0.16l-1.15,1.34l1.05,8.51l2.25,2.33l0.13,4.01l-0.94,2.68l-3.95,4.4l-1.86,0.38l-0.73,1.75l0.76,2.96l1.73,1.72l1.52,-0.54l0.21,1.37l2.62,0.76l3.5,-0.89l1.6,0.83l1.73,4.23l0,0l-3.74,6.65l-3.82,-0.35l-1.75,-1.78h-3.56l-1.46,-2.67l-3.82,-1.05l-1.52,1.81l-2.51,0.51l-1.36,2.35l1.31,1.18v3.06l-2.33,0.99l0.13,1.53l-3.22,1.59l-1.18,5.76l0.52,0.64l2.96,-0.64l0.94,5.82l2.56,6.3l2.17,0.64l-0.21,2.61l-1.96,-0.67l0.92,3.59l-1.18,0.41l0.6,1.62l-2.09,0.73l-1.31,1.75l-0.55,2.61l1.13,2.06l-7.72,-3.72l-5.86,4.61l-1.13,-1.62l-1.46,0.64l-3.61,-3.02l-3.66,-0.6l-0.03,4l1.33,3.37l-2.41,5.27l-2.41,1.33l-5.94,-1.94l-4.66,0.7l-3.92,1.97l-0.86,-2.45l-3.92,-2.41l-1.15,1.87l-3.56,2.29l-0.99,3.94l-3.48,3.37l-5.26,2.19l-2.35,2.7l-3.9,-0.06l1.44,-0.83l-0.05,-2.92l-3.74,-0.22l0.58,-1.9h-2.15l-3.5,2.13l-4.47,0.25l-0.84,-2.83l-2.2,-0.25l-1.2,1.56l-0.76,-1.49l-1.28,0.38l-0.68,-1.68l-2.04,1.94l0.58,2.35l-4.55,0.57l-4.68,4.76l0,0l-2.25,-1.11l-2.33,0.32l-1.44,-2.6l-3.61,-1.02l-3.74,0.41l-1.23,1.94l-1.96,0.6l-3.4,-2.67l-1.88,-3.27l-0.63,-3.33l-2.15,-0.16l-3.84,-2.79l-2.56,-0.29l-5.05,-7.02l-5.83,-0.1l-3.69,-1.4l-10.36,6.93l-5.86,-1.56l-2.46,0.92l-4.84,-0.25l-2.15,-2.67l-3.32,0.25l-4.11,-2.6l-7.9,-2.8l-1.2,0.89l-0.5,2.54l-3.98,-0.06l-1.07,1.46l0.76,3.08l-1.78,4.19l-0.21,5.43l0,0l-2.85,0.92l-0.13,-2.64l-4.71,-1.87l-1.86,1.37l-0.71,4l-1.28,0.41l-1.12,3.43l-6.46,-2.54l2.2,-0.79l1.41,-2.13l-5.18,-0.83l0.31,2.7l-1.33,2.79l-2.48,-4.7l-2.64,-1.62l-1.23,-7.34l0.78,-1.08l2.3,0.16l-0.18,-4.35l1.91,-3.21l-0.81,-5.47l-2.33,-0.57l2.35,-3.05l-0.24,-2.19l-1.86,-3.88l-1.96,-0.76l-0.31,-3.94l-1.39,-1.72l-7.01,-2.29l-2.93,-7.03l-2.25,-0.6l1.83,-2.26l0.39,-2.23l3.11,0.29l1.7,-1.85L95.84,201l0.63,-9.64l-5.91,-2.39l0.05,-5.19l-4.81,-2.36l-3.4,-4.87l-3.19,-1.46l-1.18,-1.53l0,0l3.74,-0.92l2.3,-1.82l3.95,0.16l4.68,-4.56l1.88,1.15l2.04,-0.45l1.39,-1.43l2.3,-0.22l2.9,1.18l1.33,-0.73l0.97,1.75l1.62,0.57l5.02,1.18l4.05,-0.19l4.58,1.85l2.12,-0.61l1.57,2.17l9.94,3.66l3.17,3.18l5.39,1.75l2.54,1.94l3.87,-0.8l7.82,-5.29l3.35,-0.76l4.53,-4.87l3.82,-7.65L174.6,142.45z\",\r\n    \"M131.41,256.98L131.62,251.55L133.4,247.35L132.64,244.27L133.72,242.81L137.69,242.88L138.19,240.33L139.39,239.44L147.29,242.24L151.4,244.84L154.72,244.59L156.86,247.26L161.7,247.51L164.16,246.59L170.02,248.15L180.38,241.22L184.07,242.62L189.9,242.72L194.95,249.74L197.51,250.02L201.36,252.82L203.5,252.98L204.13,256.31L206.01,259.58L209.41,262.25L211.38,261.64L212.61,259.71L216.35,259.29L219.96,260.31L221.39,262.91L223.72,262.6L225.97,263.71L225.97,263.71L224.38,271.13L226.76,272.09L228.46,271.67L228.46,273.13L229.42,273.45L234.47,273.07L238.97,274.78L239.36,275.83L245.33,276.37L249.64,279.61L250.51,282.3L252.16,282.78L253.65,287.15L257.15,288.3L258.93,290.14L263.09,297.62L262.41,305.61L261.15,309.66L262.36,311.69L261.65,314.19L263.17,316.35L263.17,316.35L261.96,319.48L259.01,320.43L241.88,320.18L229.92,317.96L208.21,325.94L204.94,328.35L202.33,332.06L202.35,331.42L199.63,331.99L197.04,334.62L197.51,337.63L195.5,336.23L194.11,339.4L192.65,345.95L193.3,355.31L197.91,359.49L200.47,363.38L198.22,364.9L191.42,362.53L184.2,361.55L181.66,363.22L177.19,362.37L173.53,363.66L173.45,362.75L175.46,361.17L174.86,357.97L174.1,357.75L174.76,356.14L170.94,347.28L167.43,341.33L158.15,332.31L155.19,332.72L151.35,331.42L149.88,333.32L145.09,332.12L143.81,333.76L136.44,332.97L131.88,335.32L128.27,335.32L127.46,337.09L125.71,337.22L124.4,338.48L118.28,337.5L117.24,338.13L116.82,340.06L113.55,340.38L106.96,336.8L98.85,334.81L98.85,334.81L98.17,327.65L99.14,324.77L97.1,320.56L99.55,320.05L101.83,318.31L101.36,316.16L102.59,313.78L104.34,314.32L107.22,313.24L109.57,310.39L110.85,310.42L111.95,308.14L113.84,307.89L114.67,306.59L116.9,306.81L118.1,300.19L119.38,299.62L117.39,296.76L114.02,296.06L114.28,293.66L112.66,292.67L115.61,289.56L117.79,290.33L118.18,286.55L119.75,284.49L125.45,282.21L125.19,279.42L126.68,275.01L130.79,271.51L133.56,270.47L134.76,267.52L137.14,266.79L136.72,263.07L132.28,261.9z\",\r\n    \"M346.79,192.44L350.85,192.19L353.91,190.88L354.85,193.17L362.07,197.47L361.7,202.05L363.06,210.04L368.61,209.27L369.6,206.86L370.54,206.19L373,206.63L376.19,202.59L377.42,202.75L378.57,203.96L375.67,210.77L377.84,214.46L379.07,214.71L384.62,210.16L388.12,212.26L388.33,215.63L392.31,218.08L392.41,220.69L394.97,220.31L396.02,221.1L395.16,223.08L403.16,223.14L405.99,225.62L417.63,225.27L417.86,228.51L421.34,237.28L424.22,238.4L426.94,237.54L426.94,237.54L426.7,239.41L424.14,242.43L418.23,245.58L415.48,245.96L408.18,239.57L394.27,234.2L392.83,234.71L387.26,233.69L385.84,234.52L382.99,233.44L382.13,234.42L376.01,234.46L369.16,236.58L363.14,240.75L360.29,245.19L358.98,249.13L360.29,251.17L359.22,250.5L358.96,251.13L359.32,251.8L358.69,254.4L359.53,254.18L358.17,255.1L358.41,261.42L357.33,266.79L358.2,270.44L350.38,280.08L348.86,286.17L343.58,284.62L335.39,285.06L326.42,293.08L321.84,295.43L320.69,298.25L314.36,298.66L303.08,302.44L299.76,305.89L293.98,307.35L287.81,312.39L281.63,312.45L275.91,316.22L273.45,316.28L274.39,317.39L270.91,315.65L271.49,315.02L270.54,314.67L266.33,314.51L263.17,316.35L263.17,316.35L261.65,314.19L262.36,311.69L261.15,309.66L262.41,305.61L263.09,297.62L258.93,290.14L257.15,288.3L253.65,287.15L252.16,282.78L250.51,282.3L249.64,279.61L245.33,276.37L239.36,275.83L238.97,274.78L234.47,273.07L229.42,273.45L228.46,273.13L228.46,271.67L226.76,272.09L224.38,271.13L225.97,263.71L225.97,263.71L230.65,258.95L235.21,258.37L234.63,256.02L236.67,254.09L237.35,255.77L238.63,255.39L239.39,256.88L240.59,255.33L242.79,255.58L243.63,258.41L248.1,258.15L251.61,256.02L253.75,256.02L253.18,257.93L256.92,258.15L256.97,261.07L255.53,261.9L259.43,261.96L261.78,259.26L267.04,257.07L270.52,253.71L271.51,249.77L275.07,247.48L276.22,245.61L280.14,248.02L281.01,250.47L284.93,248.5L289.59,247.8L295.52,249.74L297.93,248.4L300.34,243.13L299,239.76L299.03,235.76L302.69,236.36L306.3,239.38L307.77,238.75L308.89,240.37L314.75,235.76L322.47,239.48L321.34,237.41L321.89,234.8L323.2,233.06L325.29,232.33L324.69,230.71L325.87,230.29L324.95,226.7L326.91,227.37L327.12,224.76L324.95,224.13L322.39,217.83L321.45,212.01L318.49,212.65L317.97,212.01L319.14,206.25L322.36,204.66L322.23,203.13L324.56,202.15L324.56,199.09L323.25,197.92L324.61,195.56L327.12,195.05L328.64,193.24L332.46,194.29L333.92,196.96L337.48,196.96L339.23,198.74L343.05,199.09z\",\r\n    \"M606.95,5.23l-2.93,4.17l0.24,2.92l-1.52,0.99l0.47,4.78l-1.07,0.42l0.05,1.79l-1.02,0.22l-0.99,1.96l-7.19,0.77L591.94,25l-4.71,0.13l-1.94,2.47l-1.39,-0.42l-1.26,1.7l-7.51,1.44l-10.96,8.17l-0.08,2.85l-1.83,0.26l-0.71,1.31L560,49.85l-2.59,0.51l-5.44,5.15l-5.54,1.73l-17.92,16.63l-11.59,4.38l-6.62,4.09l-7.35,2.91l-14.12,9.43l-14.81,15.97v3.7l-1.75,2.78l0.26,2.46l-2.85,3.99l-13.52,2.2l-3.84,-2.2l-3.27,1.12l-2.38,-0.32l-5.15,2.97l-3.71,3.67l-3.48,7.5l-2.12,2.01l-4.39,7.43l0.18,9.85l-1.18,2.33l0.03,3.47l3.11,8.63l-0.42,2.42l1.05,2.33l1.99,0.32l4.03,8.34l2.35,0.99l0.78,-0.54l0.37,1.15l-1.75,-0.38l1.05,1.31l1.6,-0.35l0.08,1.31l0.79,0.06l0.76,4.27l7.11,10.18l2.62,1.34l4.58,5.25l2.72,1.27l6.46,7.89l1.07,3.24l2.56,1.11l-0.68,1.46l0.6,1.65l3.9,5.05l-2.35,1.14l0.16,0.73l1.6,1.88l0.08,2.29l1.36,1.14l0.94,-0.6l0.5,1.56l-0.58,1.65l-1.62,-0.48l0.39,-1.37l-1.33,-0.86l-2.48,1.88l-3.11,-2.96l-6.72,-2.03l-3.48,-2.77l-2.17,-0.19l-1.31,1.02l-3.69,-1.43l-1.54,0.99l-0.71,-1.4l-1.99,0.19l-0.47,-0.73l-2.01,0.95l-1.41,-0.35l-0.39,1.97l-1.83,-0.64l-12.29,3.53l-0.13,0.51l0,0l-2.72,0.86l-2.88,-1.11l-3.48,-8.77l-0.24,-3.24l-11.64,0.35l-2.83,-2.48l-8,-0.06l0.86,-1.97l-1.05,-0.79l-2.56,0.38l-0.1,-2.61l-3.98,-2.45l-0.21,-3.37l-3.5,-2.1l-5.54,4.55l-1.23,-0.25l-2.17,-3.69l2.9,-6.81l-1.15,-1.21l-1.23,-0.16l-3.19,4.04l-2.46,-0.45l-0.94,0.67l-0.99,2.42l-5.55,0.76l-1.36,-7.99l0.37,-4.58l-7.22,-4.3l-0.94,-2.29l-3.06,1.31l-4.05,0.25l0,0l-1.73,-4.23l-1.6,-0.83l-3.5,0.89l-2.62,-0.76l-0.21,-1.37l-1.52,0.54l-1.73,-1.72l-0.76,-2.96l0.73,-1.75l1.86,-0.38l3.95,-4.4l0.94,-2.68l-0.13,-4.01l-2.25,-2.33l-1.05,-8.51l1.15,-1.34l2.64,-0.16l0.44,-1.31l-1.41,-3.35l-2.8,-1.28l0.26,-2.87l-1.67,-5.01l0.24,-3.48l0,0l-2.09,-3.8l0.44,-0.54l2.67,-0.32l10.57,-5.97l4.66,-1.18l1.78,-2.62l2.54,0.77l6.36,-1.79l0.81,-2.3l2.41,-0.64l0.37,-2.23l-2.41,0.19l-1.7,-1.44l-0.76,-3.29l0,0l1.05,-1.47l1.44,-0.32l0.99,0.83l1.91,-1.63l0.94,0.61l2.54,-1.37l5.26,-4.02l0.73,-1.82l2.72,-0.42l1.52,-1.76l1.8,-0.32l0.79,-1.69l1.99,-0.16l3.11,-2.24l2.88,-0.29l1.83,-1.34l4.5,0.67l4.03,-1.05l3.37,1.02l8.61,-0.42l7.77,-2.46l2.56,-2.36l2.56,0.58l0.99,-1.05l3.95,-0.7l0.47,-1.41l3.87,0.19l3.06,-1.57l1.2,-1.66l3.17,0.61l3.35,-0.99l3.06,-2.84l5.21,-1.02l5.05,-3.96l1.2,0.64l3.66,-1.57l1.91,-2.62l1.57,0.22l3.09,-1.95l2.59,-2.94l2.07,0.54l9.81,-3.55l4.11,-6.85l2.67,-1.54l0.92,-2.82l3.74,-1.79l0.79,-4.29l1.25,-1.09l1.94,0.1l1.94,1.66l3.32,-0.06l1.2,-1.54l1.36,1.92l1.78,-1.73l0.37,1.22l2.17,0.03l3.19,-1.63l1.81,-2.88l3.19,0.16l1.1,-1.54l0.52,0.77l1.2,-0.45l1.67,-1.82l0.39,1.02l2.28,0.16l4.87,-4.03l3.01,-1.09l1.78,-4.07l1.8,1.15l3.17,-3.07l0.18,-4.1l2.54,-0.29l0.21,-0.8l2.98,0.16l1.18,-2.02l3.17,-1.28l3.11,-0.71l0.5,1.19l2.77,-0.35l1.25,-2.15l1.52,0.1l0.37,-1.44h1.18l3.71,-3.08l3.9,-0.22l0.63,1.19l1.39,0.03l4.84,-2.47l2.62,0.38l3.61,-3.11l0.24,-2.4l1.52,-0.26l0.73,2.02h2.69l1.94,-2.24l1.67,-0.1l-0.29,-0.83l2.07,-1.44l-0.05,-0.99l3.45,-1.35L606.95,5.23z\",\r\n    \"M75.91,173.37l2.12,0.19l0,0l1.18,1.53l3.19,1.46l3.4,4.87l4.81,2.36l-0.05,5.19l5.91,2.39L95.84,201l0.63,1.11l-1.7,1.85l-3.11,-0.29l-0.39,2.23l-1.83,2.26l2.25,0.6l2.93,7.03l7.01,2.29l1.39,1.72l0.31,3.94l1.96,0.76l1.86,3.88l0.24,2.19l-2.35,3.05l2.33,0.57l0.81,5.47l-1.91,3.21l0.18,4.35l-2.3,-0.16l-0.78,1.08l1.23,7.34l2.64,1.62l2.48,4.7l1.33,-2.79l-0.31,-2.7l5.18,0.83l-1.41,2.13l-2.2,0.79l6.46,2.54l1.12,-3.43l1.28,-0.41l0.71,-4l1.86,-1.37l4.71,1.87l0.13,2.64l2.85,-0.92l0,0l0.86,4.92l4.45,1.17l0.42,3.71l-2.38,0.73l-1.2,2.95l-2.77,1.05l-4.11,3.49l-1.49,4.41l0.26,2.79l-5.7,2.28l-1.57,2.06l-0.39,3.77l-2.17,-0.76l-2.96,3.11l1.62,0.98l-0.26,2.41l3.37,0.7l1.99,2.85l-1.28,0.57l-1.2,6.62l-2.22,-0.22l-0.84,1.3l-1.88,0.25l-1.1,2.28l-1.28,-0.03l-2.35,2.85l-2.88,1.08l-1.75,-0.54l-1.23,2.38l0.47,2.15l-2.28,1.74l-2.46,0.51l2.04,4.21l-0.97,2.88l0.68,7.16l0,0l-3.92,-2.18l-5.52,-0.98l-5.49,-4.59l-4.26,-1.14l-5.36,-3.77l-1.46,0.41l-2.41,-1.14l-2.3,0.76l-4.05,-3.1l-5.39,1.3l-2.01,-2.19l-1.67,0.03l-1.99,-2.82l-6.33,-4.78l-3.71,-0.32l-0.21,-1.27l-2.3,-1.52l-2.43,-3.77l-1.65,0.79L34,303.99l1.73,-3.68l-1.46,-5.93l-1.86,-1.59l-0.08,-8.63l-1.75,-1.97l0.78,-0.32l-0.55,-0.86l0.81,-1.27l-0.65,-2.63l-1.78,-2.32l-3.3,-0.1l0.55,-1.21l-0.97,-1.14l-1.52,1.02l-0.34,-1.84l-3.19,0.16l-1.57,-4.95l-2.15,-1.4l-0.26,-2.25l-4.16,-4.83l-0.21,-0.98l2.54,-2.25l0.05,-4.64l-3.37,-7.27l-2.72,-0.86l0.03,-2.64l1.75,0.57l1.28,-1.91l-1.13,-2.13l1.13,-3.53l-0.68,-2.45l0.68,-2.23l-4.68,-6.87l-1.62,0.25l0.24,-1.43l-2.72,-4.36l-1.18,-0.38l0.63,-1.53l-1.6,-2.26l0.5,-1.88L0,204.37l1.23,-3.18l-0.13,-2.77l0.92,-1.11l-0.1,-2.04l1.15,-0.19l1.26,-1.81l4.55,4.58l-0.55,0.7l0.99,1.78l10.85,7.64l3.32,3.85l5.21,2l5.81,0.64l7.93,-1.94l6.57,-3.94l6.28,-5.57l6.98,-10.85l4.42,-10.79l0.97,0.1l3.32,-2.93l2.83,-6.63l1.26,-0.51L75.91,173.37z\",\r\n    \"M173.61,101.66l5,2.43l4.03,0.73l7.35,6.45l0.92,-0.67l7.11,1.44l1.62,-0.89l4.55,3.19l4.24,1.05l8.5,0.35l3.06,-2.14l1.41,-2.43l1.1,1.56l3.45,-0.35l1.1,1.5l8.4,2.71l3.82,0.42l3.06,-2.52h2.64l10.07,4.44l3.01,-0.73l0.86,-1.28l4.53,1.92l3.48,-1.18l3.69,2.07l4.55,-0.13l2.69,0.22l4.6,2.17l3.56,-0.83l2.59,1.05l1.81,-1.4l1.28,1.28l0.76,-0.57l5.15,1.02l1.05,-0.8l0.99,1.05l2.96,0.06l2.48,-1.28l4.84,0.41l2.35,-0.8l1.7,1.34l2.88,0.1l2.28,-1.15l0.86,0.48l0.76,-1.09l4.71,-0.35l5.1,-2.36l1.96,0.8l7.01,-0.8l9.44,-3.06l1.23,-1.4l1.44,1.69l6.25,-1.56l0.79,0.96l3.01,-0.77l0,0l0.76,3.29l1.7,1.44l2.41,-0.19l-0.37,2.23l-2.41,0.64l-0.81,2.3l-6.36,1.79l-2.54,-0.77l-1.78,2.62l-4.66,1.18l-10.57,5.97l-2.67,0.32l-0.44,0.54l2.09,3.8l0,0l-2.07,0.86l-3.35,-1.53l-5.07,2.23l-1.94,-0.7l2.22,-0.16l1.1,-1.15l-3.82,-0.89l-0.86,1.31l-3.22,0.41l-8.61,-0.64l-3.48,3.92l-0.39,1.85l0.84,1.98l-0.92,2.1l-1.78,-0.16l-6.54,3.16l-8.03,1.18l-2.43,-0.73l-10.12,0.19l-1.33,1.4l-2.17,-2.39l-6.59,-1.21l-0.81,1.53l-3.56,-3.22l-1.99,-0.51l-0.81,1.15l-1.28,-1.05l-0.99,1.56l-1.57,-1.02l-0.39,2.42l-2.33,-0.35l-0.63,3.48l-0.86,-1.31l-3.92,0.7l-1.07,-3.63l-1.57,-0.35l-1.49,-1.75l-1.33,0.92l-4.45,-0.38l-0.21,-1.37l-3.03,-1.44l-0.86,0.86l1.2,1.79l-2.67,-0.32l-0.18,-1.56l-0.71,0.16l-0.97,0.77l0.18,2.36l-2.93,-2.01l-0.97,0.22l0.71,0.96l-0.84,0.48l-2.96,-1.59l-1.73,0.48l-1.07,-0.67l-4.16,0.96l-5.21,-0.45l-2.25,1.63l-3.92,-1.95l-0.97,-1.63l-2.33,-0.26l0.18,-3.57l-1.62,1.95l-4,1.95l-1.15,-1.08l-7.19,0.29l-0.89,1.24l-3.79,-0.51l-6.23,-3.09l-3.27,-0.51l0,0l0.86,-11.68l-1.2,-4.79l0.1,-6.8l-0.5,-1.76l-1.94,-0.45l-0.92,-2.78l-0.37,-14.47L173.61,101.66z\",\r\n  ];\r\nexport const REGIONSTITLE = [\"Nicosia ter: \", \"Limassol ter: \", \"Larnaca ter: \", \"Famagusta ter: \", \"Paphos ter: \", \"Kyrenia ter: \"]\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport { bindActionCreators } from 'redux';\r\nimport { SET_VALUE, SET_MAP, SET_CHART, SET_NEWDATA } from '../actions/actions';\r\nimport { Button } from 'react-bootstrap';\r\nimport { ROWS, OPERATORS, TERRITORY } from './constants'\r\n\r\n\r\nconst headerSortingClasses = (column, sortOrder, isLastSorting, colIndex) => (\r\n  sortOrder === 'asc' ? 'demo-sorting-asc' : 'demo-sorting-desc'\r\n);\r\n\r\nclass TableBasic extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.current = false\r\n    this.set_value_parameter = this.props.SET_VALUE\r\n    this.set_chart_parameter = this.props.SET_CHART\r\n    this.set_map_parameter = this.props.SET_MAP\r\n    this.set_newdata = this.props.SET_NEWDATA\r\n    this.columns = [\r\n      {\r\n        dataField: 'id',\r\n        text: '#',\r\n        sort: true,\r\n        footer: \"\",\r\n        sort: true,\r\n        headerSortingClasses\r\n\r\n      }, {\r\n        dataField: 'operator',\r\n        text: 'operator',\r\n        sort: true,\r\n        footer: '',\r\n        sort: true,\r\n        headerSortingClasses\r\n\r\n      }, {\r\n        dataField: 'territory',\r\n        text: 'territory',\r\n        sort: true,\r\n        headerSortingClasses,\r\n        footer: ''\r\n      }, {\r\n        dataField: 'value1',\r\n        text: 'value1',\r\n        sort: true,\r\n        headerSortingClasses,\r\n        footer: columnData => columnData.reduce((acc, item) => acc + Number(item), 0),\r\n        headerEvents: {\r\n          onClick: (e, column, columnIndex) => {\r\n            this.current = 'value' + (columnIndex - 2);\r\n            this.set_value_parameter(this.current);\r\n            this.set_map_parameter(this.createMapData(this.current));\r\n            this.set_chart_parameter(this.createChartData(this.current));\r\n          }\r\n        }\r\n\r\n      }, {\r\n        dataField: 'value2',\r\n        text: 'value2',\r\n        sort: true,\r\n        headerSortingClasses,\r\n        footer: columnData => columnData.reduce((acc, item) => acc + Number(item), 0),\r\n        headerEvents: {\r\n          onClick: (e, column, columnIndex) => {\r\n            this.current = 'value' + (columnIndex - 2);\r\n            this.set_value_parameter(this.current);\r\n            this.set_map_parameter(this.createMapData(this.current));\r\n            this.set_chart_parameter(this.createChartData(this.current));\r\n          }\r\n        }\r\n      }, {\r\n        dataField: 'value3',\r\n        text: 'value3',\r\n        sort: true,\r\n        headerSortingClasses,\r\n        footer: columnData => columnData.reduce((acc, item) => acc + Number(item), 0),\r\n        headerEvents: {\r\n          onClick: (e, column, columnIndex) => {\r\n            this.current = 'value' + (columnIndex - 2);\r\n            this.set_value_parameter(this.current);\r\n            this.set_map_parameter(this.createMapData(this.current));\r\n            this.set_chart_parameter(this.createChartData(this.current));\r\n          }\r\n        }\r\n      }];\r\n  }\r\n\r\n  createMapData = (parameter) => {\r\n    let result = [];\r\n    let value = parameter;\r\n    let data = this.props.data.data;\r\n\r\n    for (let i = 0; i < TERRITORY; i++) {\r\n      result.push({ 'value': 0, territory: i + 1 })\r\n    }\r\n\r\n    data.forEach((item) => {\r\n      let search = result.find(s => s.territory === item['territory'])\r\n      if (!search) {\r\n        result[result.length] = { 'value': item[`${value}`], territory: item['territory'] }\r\n      }\r\n      if (search) {\r\n        search.value += item[`${value}`];\r\n      }\r\n    })\r\n    result = result.sort((a, b) => a.territory - b.territory)\r\n    return result\r\n  }\r\n\r\n\r\n  createChartData = (parameter) => {\r\n    let result = [];\r\n    let value = parameter;\r\n    let data = this.props.data.data;\r\n    data.forEach((item) => {\r\n\r\n      let search = result.find(s => s.operator === item['operator'])\r\n\r\n      if (!search) {\r\n        result[result.length] = { 'value': item[`${value}`], operator: item['operator'] }\r\n      }\r\n\r\n      if (search) {\r\n        search.value += item[`${value}`];\r\n      }\r\n    })\r\n    return result;\r\n  }\r\n\r\n  set_data = () => {\r\n    let newState = []\r\n    for (let i = 0; i < ROWS; i++) {\r\n      newState.push({})\r\n    }\r\n\r\n    newState.forEach((id, index) => {\r\n      id['id'] = index + 1;\r\n      id['operator'] = 'operator' + Math.floor(Math.random() * OPERATORS + 1);\r\n      id['value1'] = Math.floor(Math.random() * 101);\r\n      id['value2'] = Math.floor(Math.random() * 201);\r\n      id['value3'] = Math.floor(Math.random() * 90);\r\n      id['territory'] = Math.floor(Math.random() * 6) + 1\r\n    })\r\n    return newState\r\n  }\r\n\r\n  set = () => {\r\n    this.set_newdata(this.set_data())\r\n    this.set_map_parameter(this.createMapData(this.current));\r\n    this.set_chart_parameter(this.createChartData(this.current));\r\n  }\r\n\r\n  render() {\r\n    const options = {\r\n      sizePerPage: 10,\r\n      hideSizePerPage: true,\r\n    };\r\n    return (\r\n      <div className='container-fluid'>\r\n        <div className='table__header__container'>\r\n          <div className='h3'>Таблица показателей</div>\r\n          <Button variant=\"primary\" onClick={this.set} className=\"m-10\">Get new data</Button>\r\n        </div>\r\n        <BootstrapTable\r\n          container-fluid\r\n          keyField=\"id\"\r\n          data={this.props.data.data}\r\n          columns={this.columns}\r\n          className=\"table\"\r\n          bootstrap4\r\n          pagination={paginationFactory(options)}\r\n          striped\r\n          hideSizePerPage={true}\r\n          hover />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    SET_VALUE: bindActionCreators(SET_VALUE, dispatch),\r\n    SET_MAP: bindActionCreators(SET_MAP, dispatch),\r\n    SET_CHART: bindActionCreators(SET_CHART, dispatch),\r\n    SET_NEWDATA: bindActionCreators(SET_NEWDATA, dispatch),\r\n\r\n  }\r\n}\r\n\r\nexport default connect(state => ({ data: state }), mapDispatchToProps)(TableBasic);\r\n\r\n","import React from \"react\";\r\nimport { Line, Pie, Bar } from \"react-chartjs-2\";\r\nimport { Button, ButtonGroup } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass LineChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      charType: 'Line',\r\n      data: {\r\n        labels: this.props.data.labelCharts,\r\n        datasets: [\r\n          {\r\n            label: 'Показетели операторов',\r\n            data: [],\r\n            fill: false,            \r\n            borderColor: \"#76d6c4\",\r\n            backgroundColor: [\r\n              '#3498DB',\r\n              '#1ABB9C',\r\n              '#9B59B6',\r\n              '#9CC2CB',\r\n              '#E74C3C',\r\n              '#3498DB',\r\n              '#1ABB9C',\r\n              '#9B59B6',\r\n              '#9CC2CB',\r\n              '#E74C3C',\r\n              '#3498DB',\r\n              '#1ABB9C',\r\n              '#9B59B6',\r\n              '#9CC2CB',\r\n              '#E74C3C',\r\n              '#1ABB9C'\r\n            ]\r\n          },\r\n        ]\r\n      },\r\n      options: {\r\n        title: {\r\n          display: true,\r\n          text: this.props.data.value\r\n        },\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                suggestedMin: 0,\r\n                suggestedMax: 100\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      },\r\n\r\n      legend: {\r\n        display: true,\r\n        position: \"bottom\",\r\n        labels: {\r\n          fontColor: \"#323130\",\r\n          fontSize: 14\r\n        }\r\n      }\r\n    }\r\n    this.charTypeChange = this.charTypeChange.bind(this);\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.data.mapData !== prevProps.data.mapData) {\r\n      this.update()\r\n    }\r\n  }\r\n\r\n  update() {\r\n\r\n    let datacopy = Object.assign({}, this.state.data)\r\n    for (let i = 0; i < this.props.data.chartData.length; i++) {\r\n      datacopy.datasets[0].data[i] = this.props.data.chartData[i].value\r\n    }\r\n\r\n    this.setState({ data: datacopy })\r\n  }\r\n\r\n  charTypeChange(e) {\r\n    let chart = e.currentTarget.getAttribute('data-chart')\r\n    if (chart === this.state.charType) return;\r\n    this.setState({ charType: chart })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className='container-fluid'>\r\n        <div className='h3'>Диаграмма показателя {this.props.data['value']}</div>\r\n\r\n\r\n        <ButtonGroup >\r\n          <Button variant=\"primary\" onClick={this.charTypeChange} data-chart=\"Line\">Line</Button>\r\n          <Button variant=\"primary\" onClick={this.charTypeChange} data-chart=\"Pie\">Pie</Button>\r\n          <Button variant=\"primary\" onClick={this.charTypeChange} data-chart=\"Bar\">Bar</Button>\r\n        </ButtonGroup >\r\n        <div className={this.state.charType === 'Line' ? \"\" : \"nodisplay\"}>\r\n          <Line data={this.state.data}\r\n            legend={this.state.legend}\r\n            options={this.state.options} redraw />\r\n        </div>\r\n        <div className={this.state.charType === 'Pie' ? \"\" : \"nodisplay\"}>\r\n          <Pie data={this.state.data}\r\n            legend={this.state.legend}\r\n            options={this.state.options} redraw />\r\n        </div>\r\n        <div className={this.state.charType === 'Bar' ? \"\" : \"nodisplay\"}>\r\n          <Bar data={this.state.data}\r\n            legend={this.state.legend}\r\n            options={this.state.options} redraw />\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default connect(state => ({ data: state }), dispatch => ({}))(LineChart);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { COLORS, REGIONSTITLE, REGIONSMAP } from './constants'\r\n\r\nexport class Map extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.colorUpdater = this.colorUpdater.bind(this);\r\n    this.dataUpdater = this.dataUpdater.bind(this);\r\n  }\r\n\r\n  colorUpdater(ind) {\r\n    let max = Math.max(...this.props.data.mapData.map(a => a.value));\r\n    let cData = this.props.data.mapData[ind].value;\r\n    if (cData === 0) return COLORS[4];\r\n    if (cData === max) return COLORS[0]\r\n    let currentColor = COLORS.length - Math.ceil(cData / (max / (COLORS.length)));\r\n    return COLORS[currentColor||0]\r\n\r\n  }\r\n\r\n  dataUpdater(ind) {\r\n    let cData = this.props.data.mapData[ind] ? this.props.data.mapData[ind].value : 0;\r\n    return (cData)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"h3\">Карта регионов {this.props.data[\"value\"]}</div>\r\n        <div className=\"map__container\">\r\n          <svg\r\n            className=\"svg\"\r\n            viewBox=\"0 0 600 400\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            amcharts=\"http://amcharts.com/ammap\"\r\n            xlink=\"http://www.w3.org/1999/xlink\"\r\n            version=\"1.1\"\r\n            width=\"500\"\r\n          >\r\n            <g>\r\n              {\r\n                REGIONSMAP.map((region, ind, arr) => {\r\n                  return (\r\n                    <OverlayTrigger\r\n                      key={ind + 'land'}\r\n                      placement={ind === 3 || ind === 5 ? \"bottom\" : \"top\"}\r\n                      overlay={\r\n                        <Tooltip id={ind + 'tooltip'}>\r\n                          {REGIONSTITLE[ind]}{ind + 1}\r\n                          <div className='map__tooltip__item'>\r\n                            <div className=\"map__tooltip__item__img map__tooltip__item__img\" style={{ backgroundColor: this.colorUpdater(ind) }} ></div>\r\n                            <span>{this.dataUpdater(ind)}</span>\r\n                          </div>\r\n                        </Tooltip>\r\n                      }>\r\n                      <path\r\n                        key={'CY-0' + (ind)}\r\n                        title={REGIONSTITLE[ind]}\r\n                        className=\"land\"\r\n                        fill={this.colorUpdater(ind)}\r\n                        stroke=\"#818181\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeOpacity=\"0.5\"\r\n                        original=\"#ffffff\"\r\n                        d={REGIONSMAP[ind]}\r\n                      />\r\n                    </OverlayTrigger>)\r\n                })\r\n              }\r\n            </g>\r\n          </svg>\r\n        </div>\r\n        <div className=\"map__legend__conrainer\">\r\n          {\r\n            COLORS.map((color, ind, arr) => {\r\n              return (\r\n                <div className=\"map__legend__conrainer__item\" key={ind}>\r\n                  <div className=\"map__legend__conrainer__item__img\" style={{ backgroundColor: color }}></div>\r\n                  <div className=\"map__legend__conrainer__item__text\">\r\n                    Значения <span> от </span>\r\n                    {Math.round((Math.max(...this.props.data.mapData.map(a => a.value)) / arr.length) * (arr.length - ind - 1)) || 0}\r\n                    <span> до </span>\r\n                    {Math.round((Math.max(...this.props.data.mapData.map(a => a.value)) / arr.length) * (arr.length - ind)) || 0}</div>\r\n                </div>)\r\n            })\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({ data: state }), dispatch => ({}))(Map);\r\n\r\n","import React, { Component } from 'react';\r\nimport TableBasic from \"./table\";\r\nimport LineChar from './chart';\r\nimport Map from './map';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nexport class Main extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\" >\r\n        <TableBasic />\r\n        <LineChar />\r\n        <Map />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(state => ({ data: state }),)(Main);\r\n","import React, { Component } from 'react';\r\nimport Main from './resources/components/main';\r\nimport './resources/style.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    data: state\r\n  }),\r\n  dispatch => ({})\r\n)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport { ROWS, OPERATORS, TERRITORY } from './resources/components/constants';\r\n\r\n\r\nlet initilaState = {\r\n  value: '',\r\n  data: [],\r\n  labelCharts: [],\r\n  mapData: [],\r\n  chartData: [],\r\n  regionTable: [],\r\n  operatorTable: [],\r\n}\r\n\r\nfor (let i = 0; i < ROWS; i++) {\r\n  initilaState['data'].push({})\r\n}\r\n\r\ninitilaState['data'].forEach((id, index) => {\r\n  id['id'] = index + 1;\r\n  id['operator'] = 'operator' + Math.floor(Math.random() * OPERATORS + 1);\r\n  id['value1'] = Math.floor(Math.random() * 101);\r\n  id['value2'] = Math.floor(Math.random() * 201);\r\n  id['value3'] = Math.floor(Math.random() * 90);\r\n  id['territory'] = Math.floor(Math.random() * 6) + 1\r\n})\r\n\r\ninitilaState['mapData'] = createMapData(initilaState['data'], initilaState['value'])\r\nlet operatorsData = createChartData(initilaState['data'], initilaState['value'])\r\noperatorsData.map((item) => initilaState['labelCharts'].push(item['operator']))\r\noperatorsData.map((item) => initilaState['chartData'].push(item['value']))\r\n\r\nfunction createMapData() {\r\n  let result = [];\r\n  for (let i = 0; i < TERRITORY; i++) {\r\n    result.push({ value: '', 'territory': i + 1 })\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction createChartData(data, value = 'value1') {\r\n  let result = [];\r\n\r\n  data.forEach((item) => {\r\n    let search = result.find(s => s.operator === item['operator'])\r\n    if (!search) {\r\n      result[result.length] = { value: item[`${value}`], operator: item['operator'] }\r\n    }\r\n    if (search) {\r\n      search.value += item[`${value}`];\r\n    }\r\n  })\r\n\r\n  return result\r\n}\r\n\r\nfunction getData(state = initilaState, action) {\r\n  switch (action.type) {\r\n    case 'SET_VALUE':\r\n      return { ...state, value: action.payload }\r\n    case 'SET_MAP':\r\n      return { ...state, mapData: action.payload }\r\n    case 'SET_CHART':\r\n      return { ...state, chartData: action.payload }\r\n    case 'SET_NEWDATA':\r\n      return { ...state, data: action.payload }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst store = createStore(getData);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n\r\n"],"sourceRoot":""}